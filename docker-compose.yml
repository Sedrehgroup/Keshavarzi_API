version: "3.9"

services:
  api_django:
    restart: on-failure
    container_name: api_django
    build:
      context: ./api_django
    command: sh -c "python manage.py makemigrations --noinput
      && python manage.py migrate
      && python manage.py collectstatic --no-input
      && python manage.py spectacular --file Keshavarzi.yaml
      && celery -A config worker -l INFO --detach
      && celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler --detach
      && gunicorn --reload config.wsgi --bind 0.0.0.0:8000"
    depends_on:
      - postgis
      - geoserver
    ports:
      - 8000:8000
    volumes:
      - ./api_django:/api_django
    environment:
      - ALLOW_ORIGIN=""

      # Database
      - DB_SCHEMA=public
      - DB_HOST=postgis
      - DB_NAME=KeshavarziDB
      - DB_USER=postgres
      - DB_PASS=ymEp331j5cI5jRI9
      - DB_PORT=5432

       # Geoserver
      - GEOSERVER_USERNAME=sedreh
      - GEOSERVER_PASSWORD=ABcd1234!@
      - GEOSERVER_WORKSPACE=zamin2
      - GEOSERVER_NAMESPACE=localhost
      - GEOSERVER_HOST=geoserver
      - GEOSERVER_PORT=8080
      - GEOSERVER_HOST_IP=localhost

      # Celery
      - C_FORCE_ROOT="true"
    networks:
      - main

  postgis:
    image: kartoza/postgis:14-3.2
    restart: on-failure
    container_name: postgis
    volumes:
      - db_land:/var/lib/postgresql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASS=ymEp331j5cI5jRI9
      - POSTGRES_DBNAME=KeshavarziDB
    networks:
      - main
    expose:
      - 5432

  geoserver:
    image: kartoza/geoserver:2.20.4
    container_name: geoserver
    restart: always
    ports:
      - 8080:8080
    environment:
      - GEOSERVER_ADMIN_USER=sedreh
      - GEOSERVER_ADMIN_PASSWORD=ABcd1234!@
      - DEBUG=""
      - SECRET_KEY=""
      - DB_HOST=postgis
      - DB_NAME=KeshavarziDB
      - DB_USER=postgres
      - DB_PASS=ymEp331j5cI5jRI9
      - DB_PORT=5432
    volumes:
      - geoserver_sedreh:/opt/geoserver/data_dir
      - geoserver_footprints_sedreh:/opt/footprints_dir
      - geoserver_gwc_sedreh:/opt/geoserver/data_dir/gwc
      - geoserver_letsencrypt_sedreh:/etc/letsencrypt
      - geoserver_fonts_sedreh:/opt/fonts
      - ./Server/media/:/media
      - settings:/settings
    networks:
      - main

  rabbitmq:
    container_name: rabbitmq_f
    image: rabbitmq:latest
    restart: on-failure
    networks:
      - main
    expose:
      - 5672

  nginx:
    image: nginx:latest
    restart: on-failure
    container_name: nginx
    command: nginx -g 'daemon off;'
    depends_on:
      - api_django
    networks:
      - main
    ports:
      - 1337:80
      - 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro

networks:
  main:

volumes:
  db_land:
  geoserver_sedreh:
  geoserver_footprints_sedreh:
  geoserver_gwc_sedreh:
  geoserver_letsencrypt_sedreh:
  geoserver_fonts_sedreh:
  settings: