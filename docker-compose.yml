version: "3.9"

services:
  api_django:
    restart: always
    container_name: api_django
    build:
      context: .
    depends_on:
      - postgis
      - geoserver
    expose:
      - 8000
    env_file:
      - .env
    environment:
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASS}
      - DB_NAME=${POSTGRES_DBNAME}
    networks:
      - main

  postgis:
    image: kartoza/postgis:14-3.2
    restart: on-failure
    container_name: postgis
    volumes:
      - db_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASS}
      - DB_NAME=${POSTGRES_DBNAME}
    networks:
      - main
    expose:
      - 5432

  nginx:
    image: nginx:latest
    restart: on-failure
    container_name: nginx
    command: nginx -g 'daemon off;'
    depends_on:
      - api_django
    networks:
      - main
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro

  geoserver:
    image: kartoza/geoserver:2.20.4
    container_name: geoserver
    restart: always
    ports:
      - ${GEOSERVER_PORT:-8080}:${GEOSERVER_PORT:-8080}
    env_file:
      - .env
    environment:
      - GEOSERVER_ADMIN_USER=${GEOSERVER_USER}
      - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_PASS}
    volumes:
      - geoserver_sedreh:/opt/geoserver/data_dir
      - geoserver_footprints_sedreh:/opt/footprints_dir
      - geoserver_gwc_sedreh:/opt/geoserver/data_dir/gwc
      - geoserver_letsencrypt_sedreh:/etc/letsencrypt
      - geoserver_fonts_sedreh:/opt/fonts
      - settings:/settings
    networks:
      - main

networks:
  main:

volumes:
  db_data:
  geoserver_sedreh:
  geoserver_footprints_sedreh:
  geoserver_gwc_sedreh:
  geoserver_letsencrypt_sedreh:
  geoserver_fonts_sedreh:
  settings:
