version: "3.9"

services:
  api_django:
    restart: on-failure
    container_name: api_django
    build:
      context: .
    command: sh -c "python manage.py makemigrations --noinput
      && python manage.py migrate
      && python manage.py collectstatic --no-input
      && gunicorn --reload config.wsgi --bind 0.0.0.0:8000"
    depends_on:
      - postgis
      - geoserver
    expose:
      - 8000
    volumes:
      - .:/api_django
      - static_volume:/api_django/static
      - media_volume:/api_django/media
    env_file:
      - .env
    environment:
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASS}
      - DB_NAME=${POSTGRES_DBNAME}
    networks:
      - main

  postgis:
    image: kartoza/postgis:14-3.2
    restart: on-failure
    container_name: postgis
    volumes:
      - db_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASS}
      - DB_NAME=${POSTGRES_DBNAME}
    networks:
      - main
    expose:
      - 5432

  nginx:
    image: nginx:latest
    restart: on-failure
    container_name: nginx
    command: nginx -g 'daemon off;'
    depends_on:
      - api_django
    networks:
      - main
    ports:
      - 444:444
      - 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/api_django/static
      - media_volume:/api_django/app/media

  geoserver:
    image: kartoza/geoserver:2.20.4
    container_name: geoserver
    restart: always
    ports:
      - 8080:8080
    volumes:
      - geoserver_sedreh:/opt/geoserver/data_dir
      - geoserver_footprints_sedreh:/opt/footprints_dir
      - geoserver_gwc_sedreh:/opt/geoserver/data_dir/gwc
      - geoserver_letsencrypt_sedreh:/etc/letsencrypt
      - geoserver_fonts_sedreh:/opt/fonts
      - settings:/settings
    networks:
      - main

  celery_beat:
    container_name: celery_beat
    restart: always
    command: celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    build:
      context: .
    depends_on:
      - api_django
      - postgis
    env_file:
      - .env
    environment:
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASS}
      - DB_NAME=${POSTGRES_DBNAME}
    networks:
      - main
networks:
  main:

volumes:
  db_data:
  media_volume:
  static_volume:
  geoserver_sedreh:
  geoserver_footprints_sedreh:
  geoserver_gwc_sedreh:
  geoserver_letsencrypt_sedreh:
  geoserver_fonts_sedreh:
  settings:
